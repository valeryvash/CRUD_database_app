package util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class PreparedStatementProvider {

    private static String DB_URL;
    private static String USER;
    private static String PASS;

    private static Connection connection = null;

    static {
        DB_URL = DataBasePropertiesProvider.getDB_URL();
        USER = DataBasePropertiesProvider.getUSER();
        PASS = DataBasePropertiesProvider.getPASS();

        try {
            connection = DriverManager.getConnection(DB_URL,USER,PASS);
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    private PreparedStatementProvider() {}

    private static Connection getConnection() throws SQLException {
        if (connection == null || connection.isClosed()) {
            return DriverManager.getConnection(DB_URL,USER,PASS);
        } else {
            return connection;
        }
    }

    public static PreparedStatement prepareStatement(String sql) throws SQLException {
        connection = getConnection();
        setAutoCommitModeOn();
        return connection.prepareStatement(sql);
    }

    public static PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException {
        connection = getConnection();
        setAutoCommitModeOn();
        return connection.prepareStatement(sql, autoGeneratedKeys);
    }

    private static void setAutoCommitModeOn() {
        try {
            if (!connection.getAutoCommit()){
                connection.setAutoCommit(true);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

}
